{"version":3,"sources":["components/Form/Form.module.css","components/Container/Container.module.css","components/Container/Container.jsx","redux/contacts/contacts-actions.js","services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","components/Form/Form.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","changeFilter","createAction","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","actions","axios","defaults","baseURL","fetchDeleteContact","id","delete","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","data","console","log","addContact","name","number","newContact","contact","post","deleteContact","getFilter","state","contacts","filter","getContacts","items","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","useState","setName","setNumber","dispatch","useDispatch","useSelector","selectors","handleChange","e","target","value","resetForm","form","onSubmit","preventDefault","some","toast","error","operations","type","pattern","title","required","placeholder","onChange","ContactListItem","onDeleteContact","onClick","ContactList","useEffect","map","Filter","s","label","input","App","autoClose","createReducer","fulfilled","payload","pending","rejected","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9eb04ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nconst actions = {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  changeFilter,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n};\n\nexport default actions;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => {\n  return axios.get('/contacts');\n};\n\nexport const fetchAddContact = contact => {\n  return axios.post('/contacts', contact);\n};\n\nexport const fetchDeleteContact = id => {\n  return axios.delete(`/contacts/${id}`);\n};\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from 'services/contacts-api';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContact = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await fetchContacts();\n      console.log(typeof data);\n      console.log(data);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n\n  async ({ name, number }, { rejectWithValue }) => {\n    try {\n      const newContact = {\n        name,\n        number,\n      };\n      const { data } = await fetchAddContact(newContact);\n      // axios.post('./contacts', newContact)\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\n//\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n\n  async (id, { rejectWithValue }) => {\n    try {\n      await fetchDeleteContact(id);\n      // axios.delete(`./contacts/${id}`)\n\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\n// const operations = {\n//   addContactRequest,\n//   addContactSuccess,\n//   addContactError,\n//   deleteContactRequest,\n//   deleteContactSuccess,\n//   deleteContactError,\n//   fetchContactRequest,\n//   fetchContactSuccess,\n//   fetchContactError,\n// };\n\n// export default operations;\n\n// export const fetchContacts = () => async dispatch => {\n//   dispatch(fetchContactRequest());\n\n//   try {\n//     const { data } = await axios.get('/contacts');\n\n//     dispatch(fetchContactSuccess(data));\n//     console.log(data);\n//   } catch (error) {\n//     dispatch(fetchContactError());\n//   }\n// };\n\n// export const addContact = (name, number) => dispatch => {\n//   const contact = {\n//     name,\n//     number,\n//   };\n\n//   dispatch(actions.addContactRequest());\n\n//   axios\n//     .post('./contacts', contact)\n//     .then(({ data }) =>\n//       dispatch({ type: 'contacts/addContactSuccess', payload: data }),\n//     )\n//     .catch(error => dispatch(addContactError()));\n// };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getContacts = state => {\n  console.log(state.contacts.items);\n  return state.contacts.items;\n};\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    console.log(contacts);\n\n    return contacts.filter(\n      ({ name }) => name && name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { operations, selectors } from 'redux/contacts';\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\n\n// const initialState = {\n//   name: '',\n//   number: '',\n// };\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectors.getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(contact => contact.name === name)) {\n      toast.error(`${name} already in the contacts.`);\n      return;\n    }\n    dispatch(operations.addContact({ name, number }));\n\n    resetForm();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n  // const [inputValue, setInputValue] = useState('');\n  // const { name, number } = inputValue;\n  // const dispatch = useDispatch();\n\n  // const changeInput = e => {\n  //   const { name, value } = e.currentTarget;\n  //   setInputValue({ ...inputValue, [name]: value });\n  // };\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   dispatch(operations.addContact(name, number));\n  //   setInputValue('');\n  // };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter your name\"\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter your number\"\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li>\n      <p>{name}:</p>\n      <p>{number}</p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectors, operations } from 'redux/contacts';\nimport ContactListItem from '../ContactListItem';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectors.getVisibleContacts);\n  console.log(contacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => {\n    dispatch(operations.deleteContact(id));\n  };\n\n  useEffect(() => {\n    dispatch(operations.fetchContact());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from '../Form/Form.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectors, actions } from 'redux/contacts';\n\nconst Filter = () => {\n  const value = useSelector(selectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n        required\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { ToastContainer } from 'react-toastify';\nimport Container from './components/Container/Container';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <Container>\n      <ToastContainer autoClose={3000} />\n      <h2>Phonebook</h2>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { fetchContact, addContact, deleteContact } from './contacts-operations';\nimport { changeFilter } from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContact.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContact.pending]: () => true,\n  [fetchContact.fulfilled]: () => false,\n  [fetchContact.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContact.rejected]: (_, action) => action.payload,\n  [fetchContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n\n// const items = createReducer([], {\n//   [fetchContact.fulfilled]: (_, { payload }) => payload,\n//   [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n//   [deleteContact]: (state, { payload }) =>\n//     state.filter(({ id }) => id !== payload),\n// });\n\n// const filter = createReducer('', {\n//   [changeFilter]: (_, { payload }) => payload,\n// });\n\n// const loading = createReducer(false, {\n//   [addContact]: () => true,\n//   [addContact]: () => false,\n//   [addContact]: () => false,\n//   [deleteContact]: () => true,\n//   [deleteContact]: () => false,\n//   [deleteContact]: () => false,\n//   [fetchContact]: () => true,\n//   [fetchContact]: () => false,\n//   [fetchContact]: () => false,\n// });\n\n// const error = createReducer(null, {\n//   [fetchContact.rejected]: (_, { payload }) => payload,\n//   [fetchContact.error]: () => null,\n// });\n\n// export default combineReducers({ items, filter, loading, error });\n\n// const contactSlice = createSlice({\n//   name: \"contacts\",\n//   initialState: { items: [], filter: \"\", loading: false, error: null },\n//   extraReducers: {\n//     [fetchContact.fulfilled]: (state, { payload }) => {\n//       state.items = payload;\n//       state.loading = false;\n//     },\n//     [fetchContact.pending]: (state) => {\n//       state.loading = true;\n//     },\n//     [fetchContact.error]: (state, { payload }) => {\n//       state.error = payload;\n//       state.loading = false;\n//     },\n//     [addContact.fulfilled]: (state, { payload }) => {\n//       state.items = [...state.items, payload];\n//       state.loading = false;\n//     },\n//     [addContact.pending]: (state) => {\n//       state.loading = true;\n//     },\n//     [addContact.error]: (state, { payload }) => {\n//       state.error = payload;\n//       state.loading = false;\n//     },\n//     [deleteContact.fulfilled]: (state, { payload }) => {\n//       state.items = state.items.filter(({ id }) => id !== payload);\n//       state.loading = false;\n//     },\n//     [deleteContact.pending]: (state) => {\n//       state.loading = true;\n//     },\n//     [deleteContact.error]: (state, { payload }) => {\n//       state.error = payload;\n//       state.loading = false;\n//     },\n//     [changeFilter]: (state, { payload }) => {\n//       state.filter = payload;\n//       state.loading = false;\n//     },\n//   },\n// });\n\n// export default contactSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}